run-name: Build Container Images by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      image:
        description: "Select Docker Image"
        required: true
        default: "postgres"
        type: choice
        options:
          - "postgres"

env:
  GITHUB_IMAGE_REGISTRY: ghcr.io
  GITHUB_IMAGE_NAME: nobinkhan/docker-stack
  POSTGRES_UPSTREAM_IMAGE: cgr.dev/chainguard/postgres:latest

jobs:
  Build:
    name: "Building Image"
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v4"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into github registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Image Version
        id: extract-version
        run: |
          if [ "${{ github.event.inputs.image }}" = "postgres" ]; then
            docker pull ${{ env.POSTGRES_UPSTREAM_IMAGE }}
            version=$(docker run --rm --user postgres --entrypoint postgres ${{ env.POSTGRES_UPSTREAM_IMAGE }} --version | awk '{print $NF}')
            echo "version=$version" >> $GITHUB_OUTPUT
            echo "image_short_name=postgres" >> $GITHUB_OUTPUT
          else
            echo "nothing to work with"
            exit 1
          fi

      - name: Re-Tag and push to GitHub
        id: push-to-github
        run: |
          docker pull ${{ env.POSTGRES_UPSTREAM_IMAGE }}

          docker tag ${{ env.POSTGRES_UPSTREAM_IMAGE }} ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.extract-version.outputs.image_short_name }}:${{ steps.extract-version.outputs.version }}-wolfi
          docker tag ${{ env.POSTGRES_UPSTREAM_IMAGE }} ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.extract-version.outputs.image_short_name }}:latest
          docker tag ${{ env.POSTGRES_UPSTREAM_IMAGE }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.extract-version.outputs.image_short_name }}:${{ steps.extract-version.outputs.version }}-wolfi
          docker tag ${{ env.POSTGRES_UPSTREAM_IMAGE }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.extract-version.outputs.image_short_name }}:latest

          docker push ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.image_short_name.outputs.image_short_name }}:${{ steps.extract-version.outputs.version }}-wolfi
          docker push ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.image_short_name.outputs.image_short_name }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.extract-version.outputs.image_short_name }}:${{ steps.extract-version.outputs.version }}-wolfi
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.extract-version.outputs.image_short_name }}:latest
