run-name: Build Container Images by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      image:
        description: "Select Docker Image"
        required: true
        default: "postgresql-17"
        type: choice
        options:
          - "postgresql-17"

env:
  GITHUB_IMAGE_REGISTRY: ghcr.io
  GITHUB_IMAGE_NAME: nobinkhan/docker-stack

jobs:
  Build:
    name: "Building Image"
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v4"

      - name: Image Short Name
        id: image_short_name
        run: |
          short_name=$(echo "${{ github.event.inputs.image }}" | sed 's/-[0-9]*$//')
          echo "image_short_name=${short_name}" >> $GITHUB_OUTPUT

      - name: Extract Version from Image Input
        id: extract-version
        run: |
          image="${{ github.event.inputs.image }}"
          version=$(echo "$image" | grep -o '[0-9]*$')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into github registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.image_short_name.outputs.image_short_name }}

      - name: Build and push to GitHub
        id: push-to-github
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./dockerfiles/Dockerfile.${{ steps.image_short_name.outputs.image_short_name }}
          push: true
          build-args: |
            VERSION=${{ steps.extract-version.outputs.version }}
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.image_short_name.outputs.image_short_name }}:${{ steps.extract-version.outputs.version }}
            ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}/${{ steps.image_short_name.outputs.image_short_name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.image_short_name.outputs.image_short_name }}:${{ steps.extract-version.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.image_short_name.outputs.image_short_name }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
