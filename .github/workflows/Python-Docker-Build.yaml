run-name: Python Docker Build by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Python version"
        required: true
        default: "3.12"
        type: choice
        options:
          - "3.13"
          - "3.12"

env:
  GITHUB_IMAGE_REGISTRY: ghcr.io
  GITHUB_IMAGE_NAME: nobinkhan/docker-stack/python

jobs:
  Build:
    name: "Building Image"
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v4"

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "${{ github.event.inputs.version }}" # This will automatically resolve to the latest patch version

      - name: "Get Python version"
        id: python_version
        run: |
          # Capture the Python version and remove the 'Python' text
          python_version=$(python --version | awk '{print $2}')
          echo "Python version installed: $python_version"
          # Set it as an output variable
          echo "python_version=$python_version" >> "$GITHUB_OUTPUT"

      - name: "Display Latest Python Version"
        run: echo "The latest Python version for ${{ github.event.inputs.version }} is ${{ steps.python_version.outputs.latest_version }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into github registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}

      - name: Build and push to GitHub
        id: push-to-github
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./python/Dockerfile.${{ github.event.inputs.version }}
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}:${{ steps.python_version.outputs.python_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ steps.python_version.outputs.python_version }}-slim
          build-args: |
            PYTHON_VERSION=${{ steps.python_version.outputs.python_version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push latest tag
        run: |
          if [[ "${{ github.event.inputs.version }}" == "3.13" ]]; then
            docker buildx imagetools create \
              --tag ${{ env.GITHUB_IMAGE_REGISTRY }}/${{ env.GITHUB_IMAGE_NAME }}:latest \
              --tag ${{ secrets.DOCKERHUB_USERNAME }}/python:latest \
              ${{ secrets.DOCKERHUB_USERNAME }}/python:${{ steps.python_version.outputs.python_version }}-slim
          fi
