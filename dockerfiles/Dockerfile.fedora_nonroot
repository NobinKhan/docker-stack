# --------- Base --------

FROM fedora:39 as base

ARG UID
ARG GID
ENV APP_USER=nonroot
ENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.2.29/supercronic-linux-amd64 \
    SUPERCRONIC=supercronic-linux-amd64 \
    SUPERCRONIC_SHA1SUM=cd48d45c4b10f3f0bfdd3a57d054cd05ac96812b

RUN set -eux ;\
    groupadd -g ${GID} ${APP_USER} && \
    useradd -u ${UID} -g ${GID} -m ${APP_USER} ;\
    dnf -y --allowerasing --nodocs --setopt install_weak_deps=False upgrade && dnf clean all ;\
    dnf -y --allowerasing --nodocs --setopt install_weak_deps=False autoremove && dnf clean all ;\
    dnf install -y --allowerasing --nodocs python3-pip libpq-devel && dnf clean all ;\
    pip install --no-cache --upgrade pip setuptools wheel ;\
    dnf clean all ;\
    ln /usr/bin/python3 /usr/bin/python ; \
    chown -R ${APP_USER}:${APP_USER} /home/${APP_USER} && chmod -R 775 /home/${APP_USER} ;\
    chown -R ${APP_USER}:${APP_USER} /var/run/ && chmod -R 775 /var/run/ ;\
    curl -fsSLO "$SUPERCRONIC_URL" \
    && echo "${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}" | sha1sum -c - \
    && chmod +x "$SUPERCRONIC" \
    && mv "$SUPERCRONIC" "/usr/local/bin/${SUPERCRONIC}" \
    && ln -s "/usr/local/bin/${SUPERCRONIC}" /usr/local/bin/supercronic

# --------- Base --------

# --------- Build --------
FROM base as build

RUN set -eux ;\
    dnf install -y --allowerasing --nodocs tzdata \
    gcc \
    make \
    cmake \
    gcc-c++ \
    cairo-devel \
    python3-devel \
    libarrow-devel ;\
    dnf4 clean all ;\
    pip install --no-cache --upgrade pip setuptools wheel ;

USER ${APP_USER}
WORKDIR /home/${APP_USER}
COPY requirements.txt /home/${APP_USER}/requirements.txt

# install dependency
RUN set -eux ;\
    python -m venv venv ;\
    source venv/bin/activate && \
    pip install --no-cache --upgrade pip setuptools wheel ;\
    pip wheel --no-cache -r requirements.txt -w wheelhouse ;

# --------- Build --------

# --------- Final --------

FROM base as final

ARG CHECK_TIME
USER ${APP_USER}
WORKDIR /home/${APP_USER}
COPY --chown=${UID}:${GID} --chmod=775 temp_copy /home/${APP_USER}/project/

# Copy wheel files from the build stage
COPY --from=build --chown=${UID}:${GID} --chmod=775 /home/${APP_USER}/wheelhouse /home/${APP_USER}/wheelhouse

# Install dependency
RUN set -eux ;\
    pip install --no-cache --no-index --no-warn-script-location --find-links=/home/${APP_USER}/wheelhouse -r /home/${APP_USER}/project/requirements.txt ;\
    rm -rf wheelhouse ;\
    (echo "${CHECK_TIME} * * * bash -c /home/nonroot/project/scripts/daily_check.sh") >> /home/nonroot/crontab

# Fix dramatiq executable not found error
USER root
RUN cp /home/nonroot/.local/bin/dramatiq /usr/local/bin/dramatiq
USER ${APP_USER}

EXPOSE 8000 8001

ENTRYPOINT [ "./project/entrypoint.sh"]

# --------- Final --------
